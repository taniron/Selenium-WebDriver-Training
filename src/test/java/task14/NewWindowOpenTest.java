package task14;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.Set;

public class NewWindowOpenTest {

    private WebDriver driver;
    private WebDriverWait wait;

    @Before
    public void start() {
        driver = new ChromeDriver();
        wait = new WebDriverWait(driver, 10);
    }

    @Test
    public void newWindowOpenTest() {
        //go to required url
        driver.get("http://localhost/litecart/admin/");
        wait.until(ExpectedConditions.titleIs("My Store"));
        //login
        driver.findElement(By.name("username")).sendKeys("admin");
        driver.findElement(By.name("password")).sendKeys("admin");
        driver.findElement(By.name("login")).click();
        wait.until(ExpectedConditions.titleIs("My Store"));

        driver.findElement(By.linkText("Countries")).click();
        driver.findElement(By.cssSelector("tr.row td a")).click();

        String mainWindow = driver.getWindowHandle();
        //go over popup link
        for (int i = 0; i < driver.findElements(By.cssSelector("table td#content table tr td a i")).size(); i++) {

            final Set<String> openedWindowsBeforeClick = driver.getWindowHandles();
            final int openedWindowsCountBeforeClick = openedWindowsBeforeClick.size();

            //open new window
            driver.findElements(By.cssSelector("table td#content table tr td a i")).get(i).click();

            //wait not more than 10 seconds until new window is open
            (new WebDriverWait(driver, 10)).until(new ExpectedCondition<Boolean>() {
                public Boolean apply(WebDriver d) {
                    return openedWindowsCountBeforeClick < driver.getWindowHandles().size();
                }
            });
            final Set<String> openedWindowsCountAfterClick = driver.getWindowHandles();
            openedWindowsCountAfterClick.removeAll(openedWindowsBeforeClick);

            for (String popupHandle : openedWindowsCountAfterClick) {
                    driver.switchTo().window(popupHandle);
                    driver.close();
                    driver.switchTo().window(mainWindow);
                }
        }
    }
    @After
    public void stop() {
        driver.quit();
        driver = null;
    }

}